$date
	Tue Sep 25 14:56:40 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module behavioralFullAdder $end
$var wire 1 ! a $end
$var wire 1 " b $end
$var wire 1 # carryin $end
$var wire 1 $ sum $end
$var wire 1 % carryout $end
$upscope $end
$scope module testFullAdder $end
$var wire 4 & sum [3:0] $end
$var wire 1 ' overflow $end
$var wire 1 ( carryout $end
$var reg 4 ) a [3:0] $end
$var reg 4 * b [3:0] $end
$scope module adder $end
$var wire 4 + a [3:0] $end
$var wire 1 , atest $end
$var wire 4 - b [3:0] $end
$var wire 1 . btest $end
$var wire 1 ' overflow $end
$var wire 4 / sum [3:0] $end
$var wire 1 0 cout2 $end
$var wire 1 1 cout1 $end
$var wire 1 2 cout0 $end
$var wire 1 ( carryout $end
$scope module adder0 $end
$var wire 1 3 a $end
$var wire 1 4 ab $end
$var wire 1 5 axorb $end
$var wire 1 6 b $end
$var wire 1 7 carryin $end
$var wire 1 2 carryout $end
$var wire 1 8 caxorb $end
$var wire 1 9 sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 : a $end
$var wire 1 ; ab $end
$var wire 1 < axorb $end
$var wire 1 = b $end
$var wire 1 2 carryin $end
$var wire 1 1 carryout $end
$var wire 1 > caxorb $end
$var wire 1 ? sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 @ a $end
$var wire 1 A ab $end
$var wire 1 B axorb $end
$var wire 1 C b $end
$var wire 1 1 carryin $end
$var wire 1 0 carryout $end
$var wire 1 D caxorb $end
$var wire 1 E sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 F a $end
$var wire 1 G ab $end
$var wire 1 H axorb $end
$var wire 1 I b $end
$var wire 1 0 carryin $end
$var wire 1 ( carryout $end
$var wire 1 J caxorb $end
$var wire 1 K sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xK
xJ
0I
xH
xG
0F
xE
xD
1C
xB
xA
0@
x?
x>
0=
x<
x;
1:
x9
x8
07
06
x5
x4
03
x2
x1
x0
bx /
x.
b100 -
x,
b10 +
b100 *
b10 )
x(
x'
bx &
x%
x$
z#
z"
z!
$end
#50000
05
04
1<
0;
1B
0A
0H
0G
08
#100000
bx0 &
bx0 /
09
0J
02
#150000
0(
bx10 &
bx10 /
1?
0>
#200000
01
#250000
bx110 &
bx110 /
1E
0D
#300000
00
#350000
b110 &
b110 /
0K
#400000
0,
0.
#450000
0'
#1000000
1I
b1100 *
b1100 -
#1050000
1H
1.
#1100000
b1110 &
b1110 /
1K
#1150000
1,
0.
#2000000
1@
1F
b1110 )
b1110 +
#2050000
0B
1A
0H
1G
0,
#2100000
0E
10
b10 &
b10 /
0K
1(
#2150000
1,
1.
b1010 &
b1010 /
1K
#2200000
0,
0.
1'
#2250000
0'
#3000000
0I
b100 *
b100 -
#3050000
1H
0G
1.
#3100000
b10 &
b10 /
0K
1J
0(
#3150000
1,
0.
1(
#4000000
16
1=
0C
13
0:
0F
b11 *
b11 -
b101 )
b101 +
#4050000
1B
0A
14
0H
0,
#4100000
1E
00
12
b1110 &
b1110 /
1K
0J
#4150000
1,
1.
0K
b100 &
b100 /
0?
1>
0(
#4200000
0,
0.
1'
11
#4250000
0'
b0 &
b0 /
0E
1D
#4300000
10
#4350000
b1000 &
b1000 /
1K
#4400000
1,
1.
#4450000
1'
#5000000
06
b10 *
b10 -
#5050000
15
04
#5100000
b1001 &
b1001 /
19
02
#5150000
b1011 &
b1011 /
1?
0>
#5200000
01
#5250000
b1111 &
b1111 /
1E
0D
#5300000
00
#5350000
b111 &
b111 /
0K
#5400000
0,
0.
#5450000
0'
#6000000
1C
1I
0@
1F
b1110 *
b1110 -
b1001 )
b1001 +
#6050000
1.
1G
1,
#6100000
1(
1'
#7000000
16
0C
1@
b1011 *
b1011 -
b1101 )
b1101 +
#7050000
05
14
#7100000
b110 &
b110 /
09
12
#7150000
b100 &
b100 /
0?
1>
#7200000
11
#7250000
b0 &
b0 /
0E
1D
#7300000
10
#7350000
b1000 &
b1000 /
1K
#7400000
0,
0.
#7450000
0'
#8000000
